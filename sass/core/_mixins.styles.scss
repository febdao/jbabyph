//
// HELPERS
//

// Vendor prefix
// -webkit  Chrome / Safari
// -ms      IE
// -moz     Mozilla
// -o       Opera
// Use: @include prefix(property, value)
@mixin prefix($name, $argument) {
  -webkit-#{$name}: #{$argument};
  -ms-#{$name}: #{$argument};
  -moz-#{$name}: #{$argument};
  -o-#{$name}: #{$argument};
  #{$name}: #{$argument};
}

@mixin google_lato_font($weight, $style: normal) {
 
  // Translate Weight

  @if ($weight == light) {
    $weight: 300;
  }
  @if ($weight == normal) or ($weight == regular) {
    $weight: 400;
  }
  @if ($weight == bold) {
    $weight: 700;
  }
 
  // Translate Style
  @if $style == normal {
    $style: normal;
  }
  @else if $style == italic {
    $style: italic;
  }
 
 
 
  font-family: 'Lato', sans-serif;
  font-style:  $style;
  font-weight: $weight;
}

@mixin google_sans_font($weight: 400, $style: normal) {

 
  // Translate Weight

  @if ($weight == light) {
    $weight: 400;
  }
  @if ($weight == normal) or ($weight == regular) {
    $weight: 400;
  }
  @if ($weight == bold) {
    $weight: 700;
  }
 
  // Translate Style
  @if $style == normal {
    $style: normal;
  }
  @else if $style == italic {
    $style: italic;
  }
 
 
  font-family: 'Alegreya Sans', sans-serif;
  font-style:  $style;
  font-weight: $weight;
}


// BUTTONS

// Basic button
.basic-button {
  display:block;
  padding: 10px 26px 8px 20px;
  @include google_sans_font(bold);
  background: #FFF;
  color: $primaryColor;
  @include font-size(18);

}


@mixin resize-sprite($map, $sprite, $percent) {
  $spritePath: sprite-path($map);
  $spriteWidth: image-width($spritePath);
  $spriteHeight: image-height($spritePath);
  $width: image-width(sprite-file($map, $sprite));
  $height: image-height(sprite-file($map, $sprite));
 
  @include background-size(ceil($spriteWidth * ($percent/100)) ceil($spriteHeight * ($percent/100)));
  width: ceil($width*($percent/100));
  height: ceil($height*($percent/100));
  background-position: 0 floor(nth(sprite-position($map, $sprite), 2) * ($percent/100) );
}
 
@mixin resize-sprite-set($map, $percent, $only...) {
  $name: sprite_map_name($map);
 
  @each $sprite in sprite_names($map) {
    @if length($only) == 0 or index($only, $sprite) != false {
      .#{$name}-#{$sprite} {
        @include resize-sprite($map, $sprite, $percent);
      }
    }
  }
}

@mixin font-resize-jbaby ($sizeValue: 1.6, $line: $sizeValue * 1.5, $important: 'not-important'){
    @include font-size($sizeValue*.46, $line*.46, $important); 
}

@mixin dashed-border($dashlength, $spacelength, $borderwidth, $color, $position: top) {
  $per: percentage($dashlength / ($dashlength + $spacelength));
  background-image: linear-gradient(to right, $color 0%, $color $per, rgba(0, 0, 0, 0) $per);
  background-position: 0 $position; 
  background-size: ($dashlength + $spacelength) $borderwidth;
  background-repeat: repeat-x;
}

@mixin dashed-border-vertical($dashlength, $spacelength, $borderwidth, $color, $position: right) {
  $per: percentage($dashlength / ($dashlength + $spacelength));
  background-image: linear-gradient(to bottom, $color 0%, $color $per, rgba(0, 0, 0, 0) $per);
  background-position: $position, 0; 
  background-size:  $borderwidth ($dashlength + $spacelength);
  background-repeat: repeat-y;
}

